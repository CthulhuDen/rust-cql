extern crate cql;
extern crate eventual;
extern crate mio;
extern crate uuid;

use std::borrow::Cow;
use self::uuid::Uuid;
use cql::*;

pub fn to_hex_string(bytes: &Vec<u8>) -> String {
  let strs: Vec<String> = bytes.iter()
                               .map(|b| format!("{:02X}", b))
                               .collect();
  strs.connect(" ")
}

#[test]
fn test_read_event(){
	let version = 3;
	// Event example
	let bytes = 
	// Header (v3 -> 5 bytes)
	vec![131, 0, 255, 255, 12, 	
	// Length
	0, 0, 0, 28, 
	// Body -----------
	//STATUS_CHANGE
	0,13, 83, 84, 65, 84, 85, 83, 95, 67, 72, 65, 78, 71, 69, 
	//UP
	0, 2, 85, 80, 
	//[inet]
	//address = 172.17.0.0
	4, 172, 17, 0, 3, 
	//Port = 11346
	0, 0, 35, 82];

	let result = bytes.as_slice().read_cql_response(version).unwrap();
    println!("{:?}",result);
    assert_response!(result);
}

//Querying SELECT peer,data_center,rack FROM system.peers;
#[test]
fn test_read_peers_query(){
	let version = 3;
	let bytes = 
	// Header (v3 -> 5 bytes)
	vec![131, 0, 0, 1, 8, 
	// Length
	0, 0, 0, 94, 
	// Body -----------
	//Rows
	0, 0, 0, 2, 

	0, 0, 0, 1, 0, 0, 0, 3, 0, 6, 115, 121, 115, 116, 101, 109, 0, 5, 112, 101, 101, 114, 115, 0, 4, 112, 101, 101, 114, 0, 16, 0, 11, 100, 97, 116, 97, 95, 99, 101, 110, 116, 101, 114, 0, 13, 0, 4, 114, 97, 99, 107, 0, 13, 0, 0, 0, 1, 0, 0, 0, 4, 172, 17, 0, 3, 0, 0, 0, 11, 100, 97, 116, 97, 99, 101, 110, 116, 101, 114, 49, 0, 0, 0, 5, 114, 97, 99, 107, 49];

	let result = bytes.as_slice().read_cql_response(version).unwrap();
    println!("{:?}",result);
    assert_response!(result);
}

#[test]
fn test_read_uuid(){
	let version = 3;
	let bytes1 = vec![131, 0, 0, 1, 8, 0, 0, 0, 148, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 5, 0, 6, 115, 121, 115, 116, 101, 109, 0, 5, 112, 101, 101, 114, 115, 0, 4, 112, 101, 101, 114, 0, 16, 0, 11, 100, 97, 116, 97, 95, 99, 101, 110, 116, 101, 114, 0, 13, 0, 7, 104, 111, 115, 116, 95, 105, 100, 0, 12, 0, 4, 114, 97, 99, 107, 0, 13, 0, 11, 114, 112, 99, 95, 97, 100, 100, 114, 101, 115, 115, 0, 16, 0, 0, 0, 1, 0, 0, 0, 4, 172, 17, 0, 3, 0, 0, 0, 11, 100, 97, 116, 97, 99, 101, 110, 116, 101, 114, 49, 0, 0, 0, 16, 156, 21, 178, 199, 7, 251, 64, 55, 151, 170, 157, 207, 93, 193, 13, 203, 0, 0, 0, 5, 114, 97, 99, 107, 49, 0, 0, 0, 4, 172, 17, 0, 3];
	let bytes2 = vec![131, 0, 0, 1, 8, 0, 0, 0, 62, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 6, 115, 121, 115, 116, 101, 109, 0, 5, 112, 101, 101, 114, 115, 0, 7, 104, 111, 115, 116, 95, 105, 100, 0, 12, 0, 0, 0, 1, 0, 0, 0, 16, 156, 21, 178, 199, 7, 251, 64, 55, 151, 170, 157, 207, 93, 193, 13, 203];

	let result = bytes1.as_slice().read_cql_response(version).unwrap();
    println!("{:?}",result);
    assert_response!(result);
}


//#[test]
fn test_large_response(){
	let version = 3;
	let bytes = vec![131, 0, 0, 1, 8, 0, 0, 12, 229, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 7, 0, 6, 115, 121, 115, 116, 101, 109, 0, 18, 99, 111, 109, 112, 97, 99, 116, 105, 111, 110, 95, 104, 105, 115, 116, 111, 114, 121, 0, 2, 105, 100, 0, 12, 0, 8, 98, 121, 116, 101, 115, 95, 105, 110, 0, 2, 0, 9, 98, 121, 116, 101, 115, 95, 111, 117, 116, 0, 2, 0, 17, 99, 111, 108, 117, 109, 110, 102, 97, 109, 105, 108, 121, 95, 110, 97, 109, 101, 0, 13, 0, 12, 99, 111, 109, 112, 97, 99, 116, 101, 100, 95, 97, 116, 0, 11, 0, 13, 107, 101, 121, 115, 112, 97, 99, 101, 95, 110, 97, 109, 101, 0, 13, 0, 11, 114, 111, 119, 115, 95, 109, 101, 114, 103, 101, 100, 0, 33, 0, 9, 0, 2, 0, 0, 0, 27, 0, 0, 0, 16, 211, 225, 75, 0, 3, 255, 17, 230, 147, 194, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 2, 142, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 16, 115, 115, 116, 97, 98, 108, 101, 95, 97, 99, 116, 105, 118, 105, 116, 121, 0, 0, 0, 8, 0, 0, 1, 84, 32, 77, 3, 172, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 40, 84, 223, 80, 4, 163, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 3, 4, 123, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 192, 101, 0, 0, 0, 14, 115, 105, 122, 101, 95, 101, 115, 116, 105, 109, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 36, 123, 105, 196, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 16, 2, 62, 217, 16, 4, 138, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 2, 142, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 16, 115, 115, 116, 97, 98, 108, 101, 95, 97, 99, 116, 105, 118, 105, 116, 121, 0, 0, 0, 8, 0, 0, 1, 84, 35, 214, 153, 33, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 40, 235, 39, 192, 6, 87, 17, 230, 165, 152, 225, 165, 161, 181, 2, 240, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 3, 78, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 16, 115, 115, 116, 97, 98, 108, 101, 95, 97, 99, 116, 105, 118, 105, 116, 121, 0, 0, 0, 8, 0, 0, 1, 84, 47, 164, 204, 60, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 91, 178, 89, 16, 4, 146, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 16, 115, 99, 104, 101, 109, 97, 95, 102, 117, 110, 99, 116, 105, 111, 110, 115, 0, 0, 0, 8, 0, 0, 1, 84, 36, 13, 81, 33, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 85, 222, 184, 208, 9, 66, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 3, 4, 176, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 192, 90, 0, 0, 0, 14, 115, 105, 122, 101, 95, 101, 115, 116, 105, 109, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 66, 197, 124, 220, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 16, 41, 24, 238, 128, 6, 87, 17, 230, 165, 152, 225, 165, 161, 181, 2, 240, 0, 0, 0, 8, 0, 0, 0, 0, 0, 3, 4, 181, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 192, 84, 0, 0, 0, 14, 115, 105, 122, 101, 95, 101, 115, 116, 105, 109, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 47, 164, 205, 104, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 16, 39, 224, 114, 160, 4, 163, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 3, 253, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 16, 115, 115, 116, 97, 98, 108, 101, 95, 97, 99, 116, 105, 118, 105, 116, 121, 0, 0, 0, 8, 0, 0, 1, 84, 36, 123, 102, 202, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 85, 200, 152, 192, 9, 66, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 2, 124, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 16, 115, 115, 116, 97, 98, 108, 101, 95, 97, 99, 116, 105, 118, 105, 116, 121, 0, 0, 0, 8, 0, 0, 1, 84, 66, 197, 124, 76, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 92, 0, 238, 64, 4, 146, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 16, 115, 99, 104, 101, 109, 97, 95, 117, 115, 101, 114, 116, 121, 112, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 36, 13, 83, 36, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 85, 189, 234, 96, 9, 66, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 112, 101, 101, 114, 115, 0, 0, 0, 8, 0, 0, 1, 84, 66, 197, 124, 6, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 255, 255, 255, 255, 0, 0, 0, 16, 199, 169, 54, 48, 6, 78, 17, 230, 165, 152, 225, 165, 161, 181, 2, 240, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 44, 142, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 22, 87, 0, 0, 0, 5, 108, 111, 99, 97, 108, 0, 0, 0, 8, 0, 0, 1, 84, 47, 109, 225, 19, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 123, 177, 194, 160, 9, 91, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 3, 239, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 16, 115, 115, 116, 97, 98, 108, 101, 95, 97, 99, 116, 105, 118, 105, 116, 121, 0, 0, 0, 8, 0, 0, 1, 84, 67, 106, 75, 202, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 182, 226, 26, 192, 9, 74, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 196, 81, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 58, 82, 0, 0, 0, 14, 115, 99, 104, 101, 109, 97, 95, 99, 111, 108, 117, 109, 110, 115, 0, 0, 0, 8, 0, 0, 1, 84, 66, 252, 102, 107, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 2, 101, 194, 0, 4, 138, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 44, 173, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 22, 78, 0, 0, 0, 5, 108, 111, 99, 97, 108, 0, 0, 0, 8, 0, 0, 1, 84, 35, 214, 154, 32, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 182, 200, 42, 32, 9, 74, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 104, 240, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 33, 143, 0, 0, 0, 21, 115, 99, 104, 101, 109, 97, 95, 99, 111, 108, 117, 109, 110, 102, 97, 109, 105, 108, 105, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 66, 252, 101, 194, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 123, 213, 119, 64, 9, 91, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 3, 4, 152, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 192, 90, 0, 0, 0, 14, 115, 105, 122, 101, 95, 101, 115, 116, 105, 109, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 67, 106, 76, 180, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 16, 85, 254, 117, 208, 9, 66, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 24, 173, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 22, 69, 0, 0, 0, 5, 108, 111, 99, 97, 108, 0, 0, 0, 8, 0, 0, 1, 84, 66, 197, 125, 173, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 2, 101, 115, 224, 4, 138, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 3, 4, 46, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 192, 74, 0, 0, 0, 14, 115, 105, 122, 101, 95, 101, 115, 116, 105, 109, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 35, 214, 154, 30, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 16, 92, 25, 127, 80, 4, 146, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 17, 115, 99, 104, 101, 109, 97, 95, 97, 103, 103, 114, 101, 103, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 36, 13, 83, 197, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 199, 86, 52, 48, 6, 78, 17, 230, 165, 152, 225, 165, 161, 181, 2, 240, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 112, 101, 101, 114, 115, 0, 0, 0, 8, 0, 0, 1, 84, 47, 109, 222, 243, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 255, 255, 255, 255, 0, 0, 0, 16, 198, 124, 196, 32, 6, 78, 17, 230, 165, 152, 225, 165, 161, 181, 2, 240, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 43, 199, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 22, 72, 0, 0, 0, 5, 108, 111, 99, 97, 108, 0, 0, 0, 8, 0, 0, 1, 84, 47, 109, 217, 98, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 163, 128, 156, 112, 9, 116, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 3, 4, 181, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 192, 87, 0, 0, 0, 14, 115, 105, 122, 101, 95, 101, 115, 116, 105, 109, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 68, 15, 39, 183, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 16, 212, 63, 151, 160, 3, 255, 17, 230, 147, 194, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 3, 3, 241, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 192, 77, 0, 0, 0, 14, 115, 105, 122, 101, 95, 101, 115, 116, 105, 109, 97, 116, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 32, 77, 6, 11, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 16, 183, 26, 143, 224, 9, 74, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 2, 145, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 16, 115, 99, 104, 101, 109, 97, 95, 107, 101, 121, 115, 112, 97, 99, 101, 115, 0, 0, 0, 8, 0, 0, 1, 84, 66, 252, 103, 222, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 91, 212, 135, 16, 4, 146, 17, 230, 137, 129, 173, 27, 53, 72, 177, 84, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 15, 115, 99, 104, 101, 109, 97, 95, 116, 114, 105, 103, 103, 101, 114, 115, 0, 0, 0, 8, 0, 0, 1, 84, 36, 13, 82, 1, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 16, 162, 208, 173, 96, 9, 116, 17, 230, 183, 153, 139, 22, 207, 118, 109, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 2, 117, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 16, 115, 115, 116, 97, 98, 108, 101, 95, 97, 99, 116, 105, 118, 105, 116, 121, 0, 0, 0, 8, 0, 0, 1, 84, 68, 15, 35, 43, 0, 0, 0, 6, 115, 121, 115, 116, 101, 109, 0, 0, 0, 44, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1];
	let result = bytes.as_slice().read_cql_response(version).unwrap();
    println!("{:?}",result);
    assert_response!(result);
}


#[test]
fn test_select_types(){
	let version = 3;
	let bytes = 
	// Header (v3 -> 5 bytes)
	vec![131, 0, 0, 1, 8, 
	// Length = 594
	0, 0, 2, 82, 
	// ----------- Body -----------
	//CqlResponseBody
	//ResultRows

	//Flag has_mode_pages
	0, 0, 0, 2, 


	0, 0, 

	0, 1, 

	0, 0, 0, 19, 0, 


	//"rust"
	4, 
	114, 117, 115, 116, 

	//"test_types"
	0, 10, 

	116, 101, 115, 116, 95, 116, 121, 112, 101, 115, 
	

	//"int_"
	0, 4, 
	105, 110, 116, 95, 

	//"ascii_"
	0, 9, 

	0, 6, 97, 115, 99, 105, 105, 95, 

	0, 1, 

	0, 7, 

	98, 105, 103, 105, 110, 116, 95, 

	0, 2, 

	0, 5, 

	98, 108, 111, 98, 95, 

	0, 3, 

	0, 8, 

	98, 111, 111, 108, 101, 97, 110, 95, 

	0, 4, 

	0, 5, 100, 97, 116, 101, 95, 

	0, 0, 

	//"org.apache.cassandra.db.marshal.SimpleDateType"
	0, 46, 
	111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 83, 105, 109, 112, 108, 101, 68, 97, 116, 101, 84, 121, 112, 101, 

	0, 8, 

	100, 101, 99, 105, 109, 97, 108, 95, 

	0, 6, 

	0, 7, 100, 111, 117, 98, 108, 101, 95, 0, 7, 0, 6, 102, 108, 111, 97, 116, 95, 0, 8, 0, 5, 105, 110, 101, 116, 95, 0, 16, 0, 9, 115, 109, 97, 108, 108, 105, 110, 116, 95, 0, 0, 0, 41, 111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 83, 104, 111, 114, 116, 84, 121, 112, 101, 0, 5, 116, 101, 120, 116, 95, 0, 13, 0, 5, 116, 105, 109, 101, 95, 0, 0, 0, 40, 111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 84, 105, 109, 101, 84, 121, 112, 101, 0, 10, 116, 105, 109, 101, 115, 116, 97, 109, 112, 95, 0, 11, 0, 9, 116, 105, 109, 101, 117, 117, 105, 100, 95, 0, 15, 0, 8, 116, 105, 110, 121, 105, 110, 116, 95, 0, 0, 0, 40, 111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 66, 121, 116, 101, 84, 121, 112, 101, 0, 5, 117, 117, 105, 100, 95, 0, 12, 0, 8, 118, 97, 114, 99, 104, 97, 114, 95, 0, 13, 0, 7, 118, 97, 114, 105, 110, 116, 95, 0, 14, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 0, 

	0, 0, 0, 4, 
	//"asdf"
	97, 115, 100, 102, 

	0, 0, 0, 8, 
	// CqlBigInt(0)
	0, 0, 0, 0, 0, 0, 0, 0, 

	0, 0, 0, 2, 
	//CqlBlob(0x00A1)
	0, 161, 

	0, 0, 0, 1, 
	//CqlBoolean(false)
	0, 

	0, 0, 0, 4, 

	128, 0, 66, 39, 

	0, 0, 0, 5, 

	0, 0, 0, 1, 10, 

	0, 0, 0, 8, 

	63, 243, 192, 131, 18, 110, 151, 141, 

	0, 0, 0, 4, 

	63, 158, 6, 82, 

	0, 0, 0, 4, 

	127, 0, 0, 1, 
	
	0, 0, 0, 2, 

	0, 13, 

	0, 0, 0, 4, 

	97, 115, 100, 102, 

	0, 0, 0, 8, 

	0, 0, 44, 64, 50, 85, 154, 128, 

	0, 0, 0, 8, 

	0, 0, 1, 84, 176, 103, 213, 159, 

	0, 0, 0, 16, 

	235, 137, 210, 241, 25, 252, 17, 230, 133, 47, 173, 27, 53, 72, 177, 84, 

	0, 0, 0, 1, 

	12, 

	0, 0, 0, 16, 

	235, 137, 210, 242, 25, 252, 17, 230, 133, 47, 173, 27, 53, 72, 177, 84, 

	0, 0, 0, 6, 

	113, 119, 101, 114, 116, 121, 

	0, 0, 0, 1, 

	27];
	let result = bytes.as_slice().read_cql_response(version).unwrap();
    println!("{:?}",result);
    assert_response!(result);
}


fn test_select_types2(){
	let version = 3;
	let bytes = 
 		vec![131, 0, 0, 1, 8, 0, 0, 2, 175, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 19, 0, 4, 114, 117, 115, 116, 0, 10, 116, 101, 115, 116, 95, 116, 121, 112, 101, 115, 0, 4, 105, 110, 116, 95, 0, 9, 0, 6, 97, 115, 99, 105, 105, 95, 0, 1, 0, 7, 98, 105, 103, 105, 110, 116, 95, 0, 2, 0, 5, 98, 108, 111, 98, 95, 0, 3, 0, 8, 98, 111, 111, 108, 101, 97, 110, 95, 0, 4, 0, 5, 100, 97, 116, 101, 95, 0, 0, 0, 46, 111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 83, 105, 109, 112, 108, 101, 68, 97, 116, 101, 84, 121, 112, 101, 0, 8, 100, 101, 99, 105, 109, 97, 108, 95, 0, 6, 0, 7, 100, 111, 117, 98, 108, 101, 95, 0, 7, 0, 6, 102, 108, 111, 97, 116, 95, 0, 8, 0, 5, 105, 110, 101, 116, 95, 0, 16, 0, 9, 115, 109, 97, 108, 108, 105, 110, 116, 95, 0, 0, 0, 41, 111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 83, 104, 111, 114, 116, 84, 121, 112, 101, 0, 5, 116, 101, 120, 116, 95, 0, 13, 0, 5, 116, 105, 109, 101, 95, 0, 0, 0, 40, 111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 84, 105, 109, 101, 84, 121, 112, 101, 0, 10, 116, 105, 109, 101, 115, 116, 97, 109, 112, 95, 0, 11, 0, 9, 116, 105, 109, 101, 117, 117, 105, 100, 95, 0, 15, 0, 8, 116, 105, 110, 121, 105, 110, 116, 95, 0, 0, 0, 40, 111, 114, 103, 46, 97, 112, 97, 99, 104, 101, 46, 99, 97, 115, 115, 97, 110, 100, 114, 97, 46, 100, 98, 46, 109, 97, 114, 115, 104, 97, 108, 46, 66, 121, 116, 101, 84, 121, 112, 101, 0, 5, 117, 117, 105, 100, 95, 0, 12, 0, 8, 118, 97, 114, 99, 104, 97, 114, 95, 0, 13, 0, 7, 118, 97, 114, 105, 110, 116, 95, 0, 14, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 97, 115, 100, 102, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 161, 0, 0, 0, 1, 0, 0, 0, 0, 4, 128, 0, 66, 39, 0, 0, 0, 5, 0, 0, 0, 1, 10, 0, 0, 0, 8, 63, 243, 192, 131, 18, 110, 151, 141, 0, 0, 0, 4, 63, 158, 6, 82, 0, 0, 0, 4, 127, 0, 0, 1, 0, 0, 0, 2, 0, 13, 0, 0, 0, 4, 97, 115, 100, 102, 0, 0, 0, 8, 0, 0, 44, 64, 50, 85, 154, 128, 0, 0, 0, 8, 0, 0, 1, 84, 176, 103, 213, 159, 0, 0, 0, 16, 235, 137, 210, 241, 25, 252, 17, 230, 133, 47, 173, 27, 53, 72, 177, 84, 0, 0, 0, 1, 12, 0, 0, 0, 16, 235, 137, 210, 242, 25, 252, 17, 230, 133, 47, 173, 27, 53, 72, 177, 84, 0, 0, 0, 6, 113, 119, 101, 114, 116, 121, 0, 0, 0, 1, 27, 0, 0, 0, 4, 0, 0, 0, 7, 0, 0, 0, 5, 

 		//ttrwe
 		116, 116, 114, 119, 101, 

 		0, 0, 0, 8, 

 		171, 84, 169, 140, 235, 31, 10, 210, 

 		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255];
 	let result = bytes.as_slice().read_cql_response(version).unwrap();
 	println!("{:?}",result);
    assert_response!(result);
}

